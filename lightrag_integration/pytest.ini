[tool:pytest]
# Pytest configuration for Unified System Health Dashboard tests
# =============================================================

# Test discovery
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --show-capture=no
    --durations=10
    --cov=unified_system_health_dashboard
    --cov=dashboard_integration_helper
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --html=test-report.html
    --self-contained-html

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for system interactions
    api: Tests for REST API endpoints
    websocket: Tests for WebSocket functionality
    performance: Performance and load testing
    security: Security-related tests
    slow: Tests that take more than 10 seconds
    requires_network: Tests that require network access
    requires_db: Tests that require database access

# Timeout settings
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*RuntimeWarning.*
    ignore:.*asyncio.*

# Logging configuration  
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test environment configuration
env =
    TESTING = 1
    DASHBOARD_ENV = test
    PYTHONPATH = .
    
# Minimum Python version
minversion = 3.8