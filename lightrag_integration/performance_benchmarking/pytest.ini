[tool:pytest]
# Pytest configuration for performance benchmarking unit tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = .

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --co

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance validation tests
    slow: Tests that take a long time to run
    network: Tests that require network access
    skip_ci: Tests that should be skipped in CI environments
    benchmark: Benchmark performance tests
    regression: Regression tests for bug fixes

# Test timeout (in seconds)
timeout = 300

# Coverage settings
# These are handled by pytest-cov plugin
# --cov options should be passed via command line

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s (%(filename)s:%(lineno)d)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
log_capture = true
log_level = DEBUG

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore::ImportWarning

# Asyncio configuration
asyncio_mode = auto

# Custom pytest plugins
# pytest_plugins = 
#     pytest_benchmark
#     pytest_mock
#     pytest_asyncio